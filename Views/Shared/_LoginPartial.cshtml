@*@using Microsoft.AspNetCore.Identity

        @inject SignInManager<IdentityUser> SignInManager
        @inject UserManager<IdentityUser> UserManager

    <ul class="navbar-nav">
        @if (SignInManager.IsSignedIn(User))
            {
        <li class="nav-item">
            <a id="manage" class="nav-link " asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
        Hello @UserManager.GetUserName(User)!
        </a>
            </li>
            <li class="nav-item">
                <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button id="logout" type="submit" class="nav-link btn btn-link ">Logout</button>
                </form>
            </li>
        }
        else
        {
        <li class="nav-item">
             <a class="btn btn-secondary" id="login" asp-area="Identity" asp-page="/Account/Login">Sign In</a>
        </li>
        <li class="nav-item">
                <a class="btn btn-secondary" id="register" asp-area="Identity" asp-page="/Account/Register">Sign Up</a>

        </li>
        }
    </ul>*@

<ul class="navbar-list">
    <li>
        <a class="btn btn-secondary" id="login" asp-controller="Account" asp-action="Login">Sign In</a>
    </li>
    <li>
        <a class="btn btn-secondary" id="register" asp-controller="Account" asp-action="Register">Sign Up</a>
    </li>
</ul>


